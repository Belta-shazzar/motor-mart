// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @db.VarChar(100)
  email       String    @unique @db.VarChar(100)
  password    String
  phoneNumber String    @db.VarChar(50)
  role        UserRole  @default(BUYER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  cars Car[]
}

model Car {
  id                 String             @id @default(uuid()) @db.Uuid
  sellerId           String             @db.Uuid
  make               String             @db.VarChar(100)
  carModel           String             @db.VarChar(100)
  year               Int
  color              String
  mileage            Int //Kilometer
  price              Decimal            @db.Decimal(10, 2) //Naira
  vin                String //Vehicle Identification Number
  fuelType           FuelType
  transmission       Transmission
  description        String?
  availabilityStatus AvailabilityStatus @default(AVAILABLE)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  deletedAt          DateTime?

  // Relationships
  images Image[]
  seller User    @relation(fields: [sellerId], references: [id])

  @@index([make])
  @@index([carModel])
  @@index([year])
  @@index([price])
  @@index([mileage])
}

model Image {
  id           String    @id @default(uuid()) @db.Uuid
  carId        String    @db.Uuid
  url          String
  encoding     String
  fileName     String
  originalName String
  mimeType     String
  size         String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?

  // Relationships
  car Car @relation(fields: [carId], references: [id])
}

enum AvailabilityStatus {
  AVAILABLE
  SOLD
}

enum UserRole {
  SELLER
  BUYER
}

enum FuelType {
  Gasoline
  Diesel
  Electric
  Hybrid
}

enum Transmission {
  AUTOMATIC
  MANUAL
}
